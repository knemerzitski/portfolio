#!/bin/bash

# Stop AWS services to disable production
# 1. Update ASG
# 2. Disable CloudFront

# Import env
source ./.env.bin.local

asg_desired_capacity=0
asg_min_size=0
asg_max_size=0


# Disable CloudFront
distribution=$(
  aws cloudfront get-distribution \
    --profile $AWS_PROFILE \
    --id $CLOUDFRONT_DISTRIBUTION
)

distribution_config=$(echo "$distribution" | jq '.Distribution.DistributionConfig')

is_distribution_config_enabled=$(echo "$distribution_config" | jq '.Enabled')

if [[ $is_distribution_config_enabled = true ]]; then
  echo "Disabling CloudFront distribution $CLOUDFRONT_DISTRIBUTION"

  distribution_etag=$(echo "$distribution" | jq -r '.ETag')

  enabled_distribution_config=$(
    echo "$distribution_config" | jq '.Enabled = false'
  )

  aws cloudfront update-distribution \
    --profile $AWS_PROFILE \
    --id $CLOUDFRONT_DISTRIBUTION \
    --if-match $distribution_etag \
    --distribution-config "$enabled_distribution_config" \
    > /dev/null
    
else
  echo "CloudFront distribution $CLOUDFRONT_DISTRIBUTION is already disabled"
fi


# Update ECS Service desired task count to zero
echo "Updating ECS service desired task count to 0"
aws ecs update-service \
  --profile $AWS_PROFILE \
  --cluster $ECS_CLUSTER \
  --service $ECS_SERVICE \
  --desired-count 0 \
  > /dev/null

# Update ASG to start instances
echo "Updating Auto Scaling Group $ASG (desired_capacity: $asg_desired_capacity, min_size: $asg_min_size, max_size: $asg_max_size)"
aws autoscaling update-auto-scaling-group \
  --profile $AWS_PROFILE \
  --auto-scaling-group-name $ASG \
  --desired-capacity $asg_desired_capacity \
  --min-size $asg_min_size \
  --max-size $asg_max_size


